package DSproject;

public class TestInvertedIndex {
    public static void main(String[] args) {
    
        InvIndexPhotoManager manager = new InvIndexPhotoManager();
        
        Photo photo1 = new Photo("hedgehog.jpg",toTagsLinkedList("animal, hedgehog, apple, grass, green"));
        manager.addPhoto(photo1);
        
        Photo photo2 = new Photo("bear.jpg",toTagsLinkedList("animal, bear, cab, grass, wind"));
        manager.addPhoto(photo2);
        
        Photo photo3 = new Photo("orange-butterfly.jpg",toTagsLinkedList("insect, butterfly, flower, color"));
        manager.addPhoto(photo3);
        
        InvertedAlbum album1 = new InvertedAlbum("Album1", "bear", manager);
        InvertedAlbum album2 = new InvertedAlbum("Album2", "animal AND grass", manager);
        InvertedAlbum album3 = new InvertedAlbum("Album3", "", manager);
        
        
        System.out.println("Get photo1 path and tags:");
        System.out.println("photo1 path: " + photo1.getPath());
        
        //You can get the list of tags of photo1 by calling photo1.getTags().
        LinkedList<String> tags = photo1.getTags();
        
        //You can write a method that prints the list of tags of photo1.
        System.out.println(photo1.getPath());
        printTags(tags);
        
        System.out.println("\n\nGet album1 name, condition, and photos:");
        System.out.println("album1 name: " + album1.getName());
        System.out.println("album1 condition: " + album1.getCondition());
         //You can get the list of photos in album2 by calling album2.getPhotos().
        LinkedList<Photo> photos = album1.getPhotos();
        //You can write a method that prints the list of photos in album2.
        printPhotos(photos);
             
        System.out.println("\n\nGet album2 name, condition, and photos:");
        System.out.println("album2 name: " + album2.getName());
        System.out.println("album2 condition: " + album2.getCondition());
  //You can get the list of photos in album2 by calling album2.getPhotos().
        photos = album2.getPhotos();
        //You can write a method that prints the list of photos in album2.
        printPhotos(photos);
      
        System.out.println("\n\nGet album3 name, condition, and photos:");
        System.out.println("album3 name: " + album3.getName());
        System.out.println("album3 condition: " + album3.getCondition());
  //You can get the list of photos in album2 by calling album2.getPhotos().
        photos = album3.getPhotos();
        //You can write a method that prints the list of photos in album2.
        printPhotos(photos);
        
        System.out.println("\nDelete the photo ’bear.jpg’:");
        manager.deletePhoto("bear.jpg");
        System.out.println("\n\nGet album3 name, condition, and photos:");
        System.out.println("album3 name: " + album3.getName());
        System.out.println("album3 condition: " + album3.getCondition());
  //You can get the list of photos in album2 by calling album2.getPhotos().
        photos = album3.getPhotos();
        //You can write a method that prints the list of photos in album2.
        printPhotos(photos);
    }
    
    private static LinkedList<String> toTagsLinkedList(String tags) {
        LinkedList<String> result = new LinkedList<String>();
        String[] tagsArray = tags.split("\\s*,\\s*");
        for (int i = 0; i < tagsArray.length; i++) {
            result.insert(tagsArray[i]);
        }
        return result;
    }
    
    public static void printTags(LinkedList<String> TagsList){
 	   TagsList.findfirst();
             if(TagsList.empty()) 
                 return;
             
             while(!TagsList.last())
             {
                 System.out.print(TagsList.retrieve() + " ");
                 TagsList.findnext();
             }
             System.out.print(TagsList.retrieve() + " ");
             System.out.println(" ");
            
 }


    public static void printPhotos(LinkedList<Photo> photosList){
 	   photosList.findfirst();
             if(photosList.empty()) 
                 return;
             
             while(!photosList.last())
             {
                 System.out.println(photosList.retrieve().getPath());
                 photosList.findnext();
             }
             System.out.println(photosList.retrieve().getPath());
             System.out.println("");
             
         }
    
  
}
